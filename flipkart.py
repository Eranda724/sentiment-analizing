# -*- coding: utf-8 -*-
"""FlipKart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b6dvo9ezFmVt-cYAGREZwIWlyqaGVXfb
"""

import pandas as pd
import seaborn as sns #data visualization(graphs)
import matplotlib.pyplot as plt

import nltk #natural language tool kit
import re #regular expression
import string #string library

from nltk.sentiment.vader import SentimentIntensityAnalyzer #sentiment analyzer
from wordcloud import WordCloud , STOPWORDS , ImageColorGenerator  #word cloud

nltk.download('stopwords')
from nltk.corpus import stopwords #remove unnecessary words
stopwords = set(stopwords.words('english'))

from google.colab import files
uploaded = files.upload()

data = pd.read_csv('flipkart_reviews.csv')
data.head()

print(data.shape)

data.info()

print(data.isnull().sum())

stemmer = nltk.SnowballStemmer('english')
 def  clean(text):
# reg expressions
  text = str(text).lower()
  text = re.sub('\[.*?\]', '', text)
  text = re.sub('https?://\S+|WWW\.\S+', '', text)
  text = re.sub('<.*?>+', '', text)
  text = re.sub('\n','',text)
  text = re.sub('\W*\d\W*',' ',text)

  text = [word for word in text.split(' ')]
  text = " ".join(text)
  text=[stemmer.stem(word) for word in text.split(' ')]
  text=" ".join(text)
  return text

data['Review'] = data['Review'].apply(clean)

#Visualize
ratings = data['Rating'].value_counts()
numbers = ratings.index
quantity = ratings.values
#how many users give 1, 2, 3, 4, 5 stars

import plotly.express as px
figure = px.pie(data, values=quantity, names=numbers, hole=0.5)
figure.show()

nltk.download('vader_lexicon')
sentiments = SentimentIntensityAnalyzer()
#SentimentIntensityAnalyzer doing determining the emotional tone or sentiment expressed in the text
#positive , negative , Neutral

data['Positive'] = [sentiments.polarity_scores(i)['pos'] for i in data['Review']]
data['Negative'] = [sentiments.polarity_scores(i)['neg'] for i in data['Review']]
data['Neutral'] = [sentiments.polarity_scores(i)['neu'] for i in data['Review']]

data.head(10)

x = sum(data['Positive'])
y = sum(data['Negative'])
z = sum(data['Neutral'])

def sentiment_score(a,b,c):
  if (a>b) and (a>c):
    print("Positive ðŸ˜Š")

  elif (b>a) and (b>c):
    print("Negative ðŸ˜ ")

  else:
    print("Neutral ðŸ™‚")

sentiment_score(x,y,z)

print("Positive: ",x)
print("Negative: ",y)
print("Neutral: ",z)